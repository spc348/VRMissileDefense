<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SonicBloom.Koreo.EditorUI</name>
    </assembly>
    <members>
        <member name="T:SonicBloom.Koreo.EditorUI.KoreographyEditor">
            <summary>
            The Koreography Editor.  This is the main UI for editing Koreography
            and Koreography Tracks.
            </summary>
        </member>
        <member name="P:SonicBloom.Koreo.EditorUI.KoreographyEditor.TheEditor">
            <summary>
            Gets a reference to the Koreography Editor window.  Null if not open.
            </summary>
            <value>The Koreography Editor window.  This is null if not open.</value>
        </member>
        <member name="P:SonicBloom.Koreo.EditorUI.KoreographyEditor.AssetPath">
            <summary>
            Gets or sets the path to the most recently used asset directory in the current project.
            </summary>
            <value>The asset path directory.</value>
        </member>
        <member name="P:SonicBloom.Koreo.EditorUI.KoreographyEditor.WaveStartPositionOffset">
            <summary>
            Gets the offset in units for the edge of the WaveDisplay content from the
            edge of the EditorWindow.
            </summary>
            <value>The number of units between the edge of the EditorWindow and the
            beginning of the Waveform display.</value>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographyEditor.OpenKoreography(SonicBloom.Koreo.Koreography,SonicBloom.Koreo.KoreographyTrack)">
            <summary>
            Opens <paramref name="koreography" /> in the Koreography Editor,
            optionally selecting <paramref name="track" />.
            </summary>
            <param name="koreography">The Koreography to open.</param>
            <param name="track">The Koreography Track to highlight.</param>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographyEditor.CreateNewKoreography">
            <summary>
            Opens an OS "File Save" dialog with which the user may select the
            location and name at which to create a Koreography asset.  If one
            is specified, this creates and returns a new Koreography asset.
            </summary>
            <returns>The newly created Koreography asset if one was created,
            <c>null</c> otherwise.</returns>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographyEditor.CreateNewKoreographyTrack">
            <summary>
            Opens an OS "File Save" dialog with which the user may select the
            location and name at which to create a Koreography Track asset.
            If one is specified, this creates and returns a new Koreography
            Track asset.
            </summary>
            <returns>The newly created Koreography Track asset if one was
            created, <c>null</c> otherwise.</returns>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographyEditor.GetPayloadTypes">
            <summary>
            Retrieves all Payload types by searching all Assemblies loaded into the current
            App Domain for any <c>System.Type</c> that implements the <c>IPayload</c>
            interface.
            </summary>
            <returns>A <c>System.Type</c><c>Array</c> containing all types that implement
            the <c>IPayload</c> interface in the current AppDomain.</returns>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographyEditor.IsAudioClipValid(UnityEngine.AudioClip)">
            <summary>
            Determines if <paramref name="clip" /> is okay for editing in the Koreography
            Editor (if <c>AudioClip.GetData()</c> will return usable data). By default,
            <c>AudioClip</c>s are *not* valid.
            </summary>
            <returns>
                <c>true</c> if <paramref name="clip" /> will work with the Koreography
            Editor; otherwise, <c>false</c>.</returns>
            <param name="clip">The <c>AudioClip</c> to check.</param>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographyEditor.CheckAudioClipValidity(UnityEngine.AudioClip)">
            <summary>
            Checks <paramref name="clip" /> for validity.  If <paramref name="clip" /> is invalid
            it will pop up a dialog asking if the user wishes to take action to correct
            the issue.  If so, this causes a quick reimport of the <paramref name="AudioClip" />.
            </summary>
            <returns>
                <c>true</c> if <paramref name="clip" /> will work with the Koreography
            Editor; otherwise, <c>false</c>.</returns>
            <param name="clip">The <c>AudioClip</c> to check.</param>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographyEditor.GetSystemDisabledAudioProperty">
            <summary>
            Caches and returns a reference to the SerializedProperty that wraps the
            AudioManager's DisabledAudio system property.
            </summary>
            <returns>The cached SerializedProperty wrapper for the DisableAudio setting.</returns>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographyEditor.GetAudioSystemDisabled">
            <summary>
            Checks whether Unity's internal Audio System is disabled.  This value is typically set
            with the "Disable Audio" setting in Edit-&gt;Project Settings-&gt;Audio.
            </summary>
            <returns>
                <c>true</c>, if the audio system is disabled, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographyEditor.SetAudioSystemDisabled(System.Boolean)">
            <summary>
            Disables or enables Unity's Audio system for the current project.  This modifies the setting
            stored in "ProjectSettings/AudioManager.asset".
            </summary>
            <param name="bDisabled">Disables Unity Audio if set to <c>true</c>, otherwise enables it.</param>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographyEditor.DuplicateEventsAtLocation(System.Collections.Generic.List{SonicBloom.Koreo.KoreographyEvent},System.Int32,System.String)">
            <summary>
            Duplicates the events in the source list beginning at the specified location, recording
            them as the operation for the Undo system.
            </summary>
            <param name="srcEvents">Events to duplicate.</param>
            <param name="samplePos">The position to seed the duplication.</param>
            <param name="operationSingle">The Operation to record this as, in single (made multiple internally).</param>
        </member>
        <member name="T:SonicBloom.Koreo.EditorUI.KoreographyEventExtensions">
            <summary>
            Extra KoreographyEvent methods for editor purposes!
            </summary>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.EventDisplay.DrawPayload(UnityEngine.Rect,SonicBloom.Koreo.KoreographyTrack,SonicBloom.Koreo.KoreographyEvent,System.Boolean)">
            <summary>
            Draws the payload.  DOES NOT do a null-check on the Payload or the KoreographyEvent.
            Assumes both are valid.
            </summary>
            <param name="displayRect">The Rect into which to draw the UI.</param>
            <param name="track">The KoreographyTrack this Payload is found within.</param>
            <param name="drawEvent">The KoreographyEvent containing the Payload to draw.</param>
            <param name="isSelected">Is selected if set to <c>true</c>.</param>
        </member>
        <member name="T:SonicBloom.Koreo.EditorUI.PayloadDisplay">
            <summary>
            Handles drawing the Editor GUI for payloads.  In early Koreographer builds,
            this functionality was implemented with inheritance of the Payload itself.
            Due to packaging requirements in Unity 4.5/4.6, this method is not viable.
            As such we use the dispatch method that "simulates" the vtable.  This is
            ever-so-slightly slower (testing on Mid-2012 MBP with Retina reveals ~1.6%
            slower).
            </summary>
        </member>
        <member name="T:SonicBloom.Koreo.EditorUI.UnityTools.KoreographyInspector">
            <summary>
            The custom Editor for Koreography.  This class customizes Koreography
            in the Inspector.
            </summary>
        </member>
        <member name="T:SonicBloom.Koreo.EditorUI.UnityTools.KoreographyPropertyDrawer">
            <summary>
            Custom Property Drawer for Koreography.  This class customizes
            the representation of Koreography when used as a property of
            other classes, behaviours, etc.
            </summary>
        </member>
        <member name="T:SonicBloom.Koreo.EditorUI.UnityTools.KoreographyTrackInspector">
            <summary>
            The custom Editor for Koreography Tracks.  This class customizes
            Koreography Tracks in the Inspector.
            </summary>
        </member>
        <member name="T:SonicBloom.Koreo.EditorUI.UnityTools.MusicLayerPropertyDrawer">
            <summary>
            Custom Property Drawer for the <c>MusicLayer</c>.  This class
            customizes the representation of <c>MusicLayer</c>s when used
            as a property of other classes, behaviours, etc.
            </summary>
        </member>
        <member name="T:SonicBloom.Koreo.EditorUI.AudioAnalysis">
            <summary>
            The AudioAnalysis static class collects methods used in audio analysis together into one place.
            </summary>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.AudioAnalysis.ComputeRMS(System.Single[],System.Int32)">
            <summary>
            Returns the Root Mean Square of the collection of samples.
            </summary>
            <returns>The Root Mean Square of the <paramref name="sampleData" />.</returns>
            <param name="sampleData">The samples to compute.</param>
            <param name="numSamples">Number samples to use from the <paramref name="sampleData" /> array.</param>
        </member>
        <member name="T:SonicBloom.Koreo.EditorUI.UnityTools.EventIDPropertyDrawer">
            <summary>
            Custom Property Drawer for the <c>EventIDAttribute</c>.  This
            class customizes the representation of fields marked with
            either [EventID] or [EventIDAttribute].
            </summary>
        </member>
        <member name="M:SonicBloom.Koreo.EditorUI.KoreographerMiscUtils.AbsoluteToRelativePath(System.String,System.String)">
            <summary>
            Takes two absolute paths and returns a string representing the version of the first
            relative to the second.
            </summary>
            <returns>A representation of <paramref name="startPath" /> that is relative to <paramref name="relativeToPath" />.</returns>
            <param name="startPath">The absolute path to make relative.</param>
            <param name="relativeToPath">The absolute path to which to be made relative to.</param>
        </member>
    </members>
</doc>
